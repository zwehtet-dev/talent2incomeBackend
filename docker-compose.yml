version: '3.8'

services:
  # Laravel API Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: talent2income_api
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
      - ./storage/framework:/var/www/html/storage/framework
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:uqxgnxdaujKboTIeVr99+vKIK1ZPhzJ6SlX9Fnaa/PY=
      - APP_URL=http://localhost:8000
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3308
      - DB_DATABASE=talent2income
      - DB_USERNAME=talent2income_user
      - DB_PASSWORD=talent2income_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=null
      - CACHE_STORE=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - BROADCAST_CONNECTION=redis
      - MAIL_MAILER=smtp
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
      - MAIL_USERNAME=null
      - MAIL_PASSWORD=null
      - MAIL_ENCRYPTION=null
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - talent2income_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/up"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: talent2income_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: talent2income
      MYSQL_USER: talent2income_user
      MYSQL_PASSWORD: talent2income_password
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - talent2income_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis for Caching, Sessions, and Queues
  redis:
    image: redis:7-alpine
    container_name: talent2income_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - talent2income_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: talent2income_queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:uqxgnxdaujKboTIeVr99+vKIK1ZPhzJ6SlX9Fnaa/PY=
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3308
      - DB_DATABASE=talent2income
      - DB_USERNAME=talent2income_user
      - DB_PASSWORD=talent2income_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    networks:
      - talent2income_network

  # Scheduler (Cron Jobs)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: talent2income_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:uqxgnxdaujKboTIeVr99+vKIK1ZPhzJ6SlX9Fnaa/PY=
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3308
      - DB_DATABASE=talent2income
      - DB_USERNAME=talent2income_user
      - DB_PASSWORD=talent2income_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: php artisan schedule:work
    networks:
      - talent2income_network

  # MailHog for Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: talent2income_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - talent2income_network

  # Nginx (Optional - for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: talent2income_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites-available:/etc/nginx/sites-available
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - talent2income_network
    profiles:
      - production

  # Laravel Echo Server for WebSocket Broadcasting
  echo-server:
    build:
      context: .
      dockerfile: docker/echo-server/Dockerfile
    container_name: talent2income_echo
    restart: unless-stopped
    ports:
      - "6001:6001"
    volumes:
      - ./laravel-echo-server.json:/app/laravel-echo-server.json
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - talent2income_network
    profiles:
      - broadcasting

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  talent2income_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16